//// Created by Bi Nguyen on 10/13/20.//#include <vector>#include "Books.h"//getters and settersint Books::getIsbn() const {    return isbn;}void Books::setIsbn(int isbn) {    Books::isbn = isbn;}const std::string &Books::getLanguage() const {    return language;}void Books::setLanguage(const std::string &language) {    Books::language = language;}const std::string &Books::getType() const {    return type;}void Books::setType(const std::string &type) {    Books::type = type;}Books::Books(int isbn, const std::string &language, const std::string &type): isbn{isbn}, language{language}, type{type} {};Books::Books(int isbn, const std::string &language): Books(isbn,language, "") {};Books::Books(int isbn) : Books(isbn,"", "") {};Books::Books(const Books &&obj): Books(obj.isbn, obj.language, obj.type) {}Books::~Books() {    isbn = 0;    language = "";    type = "";}Books::Books(const Books &obj):Books(obj.isbn, obj.language, obj.type) {}bool Books::operator<(const Books &rhs) const {    if( this->isbn < rhs.getIsbn()){        return true;    }else if ( *this == rhs){        if (this->getLanguage()[0]==rhs.getLanguage()[0]){            if (this->getType()[0] > rhs.getType()[0]){//since it's in reverse order                return true;            }        }else if (this->language[0] > rhs.getLanguage()[0]){            return true;        }    }    return false;}bool Books::operator==(const Books &rhs) const {    return this->isbn == rhs.getIsbn();}Books &Books::operator=(const Books &rhs)  {    if (this == &rhs){        return *this;    }    this->isbn = rhs.isbn;    this->language = rhs.language;    this->type = rhs.type;    return *this;}